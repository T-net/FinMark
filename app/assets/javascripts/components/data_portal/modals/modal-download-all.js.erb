<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

(function (App) {
  App.Component.ModalDownloadAll = App.Component.Modal.extend({

    contentTemplate: JST['templates/data_portal/modals/modal-download-all'],
    successTemplate: JST['templates/shared/modals/modal-success-message'],
    errorTemplate: JST['templates/shared/modals/modal-error-message'],

    defaults: {
      // See App.Component.Modal for details about this option
      title: 'Download All',
      // See App.Component.Modal for details about this option
      showTitle: true,
      // See App.Component.Modal for details about this option
      footer: '<div class="group-button"><button class="c-button -white js-close">Close</button></div><div class="group-button"><button class="c-button -white js-continue">Continue</button></div>'
    },

    events: function () {
      return _.extend({}, App.Component.Modal.prototype.events, {
        'click .js-close': 'onCloseModal',
        'click .js-continue': '_onContinue'
      });
    },

    initialize: function (options) {
      this.constructor.__super__.initialize.call(this, options);
      this.render();
    },

    _setFormVars: function () {
      this.form = this.el.querySelector('form');

      if (this.form) {
        this.emailField = this.form.querySelector('.js-email');
        this.termsCheckbox = this.form.querySelector('.js-terms');
      }

      this.continueButton = this.el.querySelector('.js-continue');
    },

    _setFormEventListeners: function () {
      this.emailField.addEventListener('keyup', this._validationForm.bind(this));
      this.termsCheckbox.addEventListener('change', this._validationForm.bind(this));
    },

    /**
     * Sends email request
     */
    _sendRequest: function() {
      var self = this;

      data = $('form').serializeArray();
      data.push({ name: 'email', value: this.emailField.value });
      data.push({ name: 'country', value: this.options.iso });
      data.push({ name: 'year', value: this.options.year });

      $.post({
        url: location.href.includes('msm-enterprises') ? "<%= msme_data_request_contacts_path %>" : "<%= ns_download_all_contacts_path %>",
        data: data,
        success: function() {
          self.options.content = self.successTemplate({});
          self.constructor.__super__.render.apply(self);
        },
        error: function() {
          self.options.content = self.errorTemplate({});
          self.constructor.__super__.render.apply(self);
        },
        complete: function() {
          self.el.querySelector('.js-continue').setAttribute('disabled', 'disabled');
        }
      })
    },

    _onContinue: function () {
      var country = App.Helper.Indicators.COUNTRIES[this.options.iso];
      App.Helper.Analytics.sendEvent('Download', 'Download from Data Portal', country);

      this._sendRequest();
    },

    /**
     * Validates if email is filled properly and terms and conditions are accepted
     */
    _validationForm: function () {
      if (this.emailField.checkValidity() && this.termsCheckbox.checked) {
        this.continueButton.removeAttribute('disabled');
      } else {
        this.continueButton.setAttribute('disabled', 'disabled');
      }
    },

    afterRender: function () {
      this.constructor.__super__.afterRender.apply(this);
      this._setFormVars();
      this._setFormEventListeners();
      this._validationForm();
    },

    render: function () {
      this.options.content = this.contentTemplate({
        termsLink: '<%= terms_of_use_path %>'
      });

      this.constructor.__super__.render.apply(this);
    }
  });
}).call(this, this.App);
